{
  "version": 3,
  "sources": ["../scripts/index.js"],
  "sourcesContent": ["let state = {\n  categories_selected: [],\n  search: \"\",\n};\nfunction toggle_category(category) {\n  let idx = state.categories_selected.findIndex((item) => item == category);\n  let el = document.querySelector(`a[data-category=\"${category}\"]`);\n  if (idx == -1) {\n    state.categories_selected.push(category);\n    el.classList.add(\"in\");\n  } else {\n    state.categories_selected.splice(idx, 1);\n    el.classList.remove(\"in\");\n  }\n\n  render();\n}\n\nfunction search_changed(ev) {\n  let el = document.querySelector(\"#search-text\");\n  state.search = el.value;\n  render();\n}\n\nfunction render() {\n  let el_category_area = document.getElementById(\"category-area\");\n  if (state.search) {\n    el_category_area.classList.add(\"hidden\");\n  } else {\n    el_category_area.classList.remove(\"hidden\");\n  }\n  let el_recipes = Array.from(document.querySelectorAll(\".recipe-list-item\"));\n  let show_all = true;\n  if (state.categories_selected.length > 0 || state.search) {\n    show_all = false;\n  }\n  for (let el of el_recipes) {\n    let recipe_categories = el.dataset.categories\n      ? JSON.parse(el.dataset.categories)\n      : [];\n    let is_in = true;\n    for (let cat of state.categories_selected) {\n      if (!recipe_categories.includes(cat)) {\n        is_in = false;\n        break;\n      }\n    }\n    let search_match = true;\n    if (state.search) {\n      search_match = false;\n      let recipe_name = el.dataset.recipeName;\n      let ingredients = el.dataset.ingredients\n        ? JSON.parse(el.dataset.ingredients)\n        : [];\n      name_match = recipe_name\n        .toLowerCase()\n        .includes(state.search.toLowerCase());\n      let matched_ingredient = ingredients.find((ingredient) =>\n        ingredient.toLowerCase().includes(state.search.toLowerCase())\n      );\n      search_match = !!name_match || !!matched_ingredient;\n    }\n\n    if (show_all || (is_in && search_match)) {\n      el.classList.remove(\"hidden\");\n    } else {\n      el.classList.add(\"hidden\");\n    }\n  }\n}\n"],
  "mappings": "AAAA,IAAI,MAAQ,CACV,oBAAqB,CAAC,EACtB,OAAQ,EACV,EACA,SAAS,gBAAgBA,EAAU,CACjC,IAAIC,EAAM,MAAM,oBAAoB,UAAWC,GAASA,GAAQF,CAAQ,EACpEG,EAAK,SAAS,cAAc,oBAAoBH,CAAQ,IAAI,EAC5DC,GAAO,IACT,MAAM,oBAAoB,KAAKD,CAAQ,EACvCG,EAAG,UAAU,IAAI,IAAI,IAErB,MAAM,oBAAoB,OAAOF,EAAK,CAAC,EACvCE,EAAG,UAAU,OAAO,IAAI,GAG1B,OAAO,CACT,CAEA,SAAS,eAAeC,EAAI,CAC1B,IAAID,EAAK,SAAS,cAAc,cAAc,EAC9C,MAAM,OAASA,EAAG,MAClB,OAAO,CACT,CAEA,SAAS,QAAS,CAChB,IAAIE,EAAmB,SAAS,eAAe,eAAe,EAC1D,MAAM,OACRA,EAAiB,UAAU,IAAI,QAAQ,EAEvCA,EAAiB,UAAU,OAAO,QAAQ,EAE5C,IAAIC,EAAa,MAAM,KAAK,SAAS,iBAAiB,mBAAmB,CAAC,EACtEC,EAAW,IACX,MAAM,oBAAoB,OAAS,GAAK,MAAM,UAChDA,EAAW,IAEb,QAASJ,KAAMG,EAAY,CACzB,IAAIE,EAAoBL,EAAG,QAAQ,WAC/B,KAAK,MAAMA,EAAG,QAAQ,UAAU,EAChC,CAAC,EACDM,EAAQ,GACZ,QAASC,KAAO,MAAM,oBACpB,GAAI,CAACF,EAAkB,SAASE,CAAG,EAAG,CACpCD,EAAQ,GACR,KACF,CAEF,IAAIE,EAAe,GACnB,GAAI,MAAM,OAAQ,CAChBA,EAAe,GACf,IAAIC,EAAcT,EAAG,QAAQ,WACzBU,EAAcV,EAAG,QAAQ,YACzB,KAAK,MAAMA,EAAG,QAAQ,WAAW,EACjC,CAAC,EACL,WAAaS,EACV,YAAY,EACZ,SAAS,MAAM,OAAO,YAAY,CAAC,EACtC,IAAIE,EAAqBD,EAAY,KAAME,GACzCA,EAAW,YAAY,EAAE,SAAS,MAAM,OAAO,YAAY,CAAC,CAC9D,EACAJ,EAAe,CAAC,CAAC,YAAc,CAAC,CAACG,CACnC,CAEIP,GAAaE,GAASE,EACxBR,EAAG,UAAU,OAAO,QAAQ,EAE5BA,EAAG,UAAU,IAAI,QAAQ,CAE7B,CACF",
  "names": ["category", "idx", "item", "el", "ev", "el_category_area", "el_recipes", "show_all", "recipe_categories", "is_in", "cat", "search_match", "recipe_name", "ingredients", "matched_ingredient", "ingredient"]
}
