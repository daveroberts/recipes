{
  "version": 3,
  "sources": ["../scripts/index.js"],
  "sourcesContent": ["let state = {\r\n  categories_selected: [],\r\n};\r\nfunction toggle_category(category) {\r\n  event?.preventDefault();\r\n  let idx = state.categories_selected.findIndex((item) => item == category);\r\n  let el = document.querySelector(`a[data-category=\"${category}\"]`);\r\n  if (idx == -1) {\r\n    state.categories_selected.push(category);\r\n    el.classList.add(\"in\");\r\n  } else {\r\n    state.categories_selected.splice(idx, 1);\r\n    el.classList.remove(\"in\");\r\n  }\r\n\r\n  render_list();\r\n}\r\n\r\nfunction search_changed(ev) {\r\n  let el = document.querySelector(\"#search-text\");\r\n  state.search = el.value;\r\n  render_list();\r\n}\r\n\r\nfunction render_list() {\r\n  let el_recipes = Array.from(document.querySelectorAll(\".list-recipe\"));\r\n  let show_all = true;\r\n  if (state.categories_selected.length > 0 || state.search) {\r\n    show_all = false;\r\n  }\r\n  for (let el of el_recipes) {\r\n    let recipe_categories = el.dataset.categories\r\n      ? JSON.parse(el.dataset.categories)\r\n      : [];\r\n    let is_in = true;\r\n    for (let cat of state.categories_selected) {\r\n      if (!recipe_categories.includes(cat)) {\r\n        is_in = false;\r\n        break;\r\n      }\r\n    }\r\n    let search_match = true;\r\n    if (state.search) {\r\n      search_match = false;\r\n      let recipe_name = el.dataset.recipeName;\r\n      let ingredients = el.dataset.ingredients\r\n        ? JSON.parse(el.dataset.ingredients)\r\n        : [];\r\n      name_match = recipe_name\r\n        .toLowerCase()\r\n        .includes(state.search.toLowerCase());\r\n      let matched_ingredient = ingredients.find((ingredient) =>\r\n        ingredient.toLowerCase().includes(state.search.toLowerCase())\r\n      );\r\n      search_match = !!name_match || !!matched_ingredient;\r\n    }\r\n\r\n    if (show_all || (is_in && search_match)) {\r\n      el.classList.remove(\"hidden\");\r\n    } else {\r\n      el.classList.add(\"hidden\");\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": "AAAA,IAAI,QAAQ;AAAA,EACV,qBAAqB,CAAC;AACxB;AACA,SAAS,gBAAgB,UAAU;AACjC,SAAO,eAAe;AACtB,MAAI,MAAM,MAAM,oBAAoB,UAAU,CAAC,SAAS,QAAQ,QAAQ;AACxE,MAAI,KAAK,SAAS,cAAc,oBAAoB,QAAQ,IAAI;AAChE,MAAI,OAAO,IAAI;AACb,UAAM,oBAAoB,KAAK,QAAQ;AACvC,OAAG,UAAU,IAAI,IAAI;AAAA,EACvB,OAAO;AACL,UAAM,oBAAoB,OAAO,KAAK,CAAC;AACvC,OAAG,UAAU,OAAO,IAAI;AAAA,EAC1B;AAEA,cAAY;AACd;AAEA,SAAS,eAAe,IAAI;AAC1B,MAAI,KAAK,SAAS,cAAc,cAAc;AAC9C,QAAM,SAAS,GAAG;AAClB,cAAY;AACd;AAEA,SAAS,cAAc;AACrB,MAAI,aAAa,MAAM,KAAK,SAAS,iBAAiB,cAAc,CAAC;AACrE,MAAI,WAAW;AACf,MAAI,MAAM,oBAAoB,SAAS,KAAK,MAAM,QAAQ;AACxD,eAAW;AAAA,EACb;AACA,WAAS,MAAM,YAAY;AACzB,QAAI,oBAAoB,GAAG,QAAQ,aAC/B,KAAK,MAAM,GAAG,QAAQ,UAAU,IAChC,CAAC;AACL,QAAI,QAAQ;AACZ,aAAS,OAAO,MAAM,qBAAqB;AACzC,UAAI,CAAC,kBAAkB,SAAS,GAAG,GAAG;AACpC,gBAAQ;AACR;AAAA,MACF;AAAA,IACF;AACA,QAAI,eAAe;AACnB,QAAI,MAAM,QAAQ;AAChB,qBAAe;AACf,UAAI,cAAc,GAAG,QAAQ;AAC7B,UAAI,cAAc,GAAG,QAAQ,cACzB,KAAK,MAAM,GAAG,QAAQ,WAAW,IACjC,CAAC;AACL,mBAAa,YACV,YAAY,EACZ,SAAS,MAAM,OAAO,YAAY,CAAC;AACtC,UAAI,qBAAqB,YAAY;AAAA,QAAK,CAAC,eACzC,WAAW,YAAY,EAAE,SAAS,MAAM,OAAO,YAAY,CAAC;AAAA,MAC9D;AACA,qBAAe,CAAC,CAAC,cAAc,CAAC,CAAC;AAAA,IACnC;AAEA,QAAI,YAAa,SAAS,cAAe;AACvC,SAAG,UAAU,OAAO,QAAQ;AAAA,IAC9B,OAAO;AACL,SAAG,UAAU,IAAI,QAAQ;AAAA,IAC3B;AAAA,EACF;AACF;",
  "names": []
}
